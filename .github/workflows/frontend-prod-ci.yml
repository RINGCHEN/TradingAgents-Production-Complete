name: Frontend Production (build + preview + manual deploy)

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: "Deploy to production after preview tests pass?"
        required: false
        default: "false"

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install deps
        run: npm ci

      - name: Build (Vite)
        run: |
          npm run build
          if [ -d "dist" ]; then OUT_DIR=dist; elif [ -d "build" ]; then OUT_DIR=build; else echo "No dist/ or build/ output found"; exit 1; fi
          echo "Using output folder: $OUT_DIR"
          ls -la "$OUT_DIR" | head -n 50

      - name: Install Playwright (if config exists)
        if: ${{ hashFiles('frontend/playwright-simple.config.ts') != '' }}
        run: npx playwright install --with-deps

      - name: Serve preview on :3000 (vite preview)
        run: |
          npm run preview -- --port 3000 --strictPort &
          sleep 3
          for i in {1..10}; do curl -sSf http://localhost:3000 >/dev/null && break || (echo "waiting for preview..." && sleep 2); done

      - name: Run smoke tests (headless; skip if no config)
        if: ${{ hashFiles('frontend/playwright-simple.config.ts') != '' }}
        env:
          BASE_URL: http://localhost:3000
          CI: 'true'
        run: npx playwright test --config=playwright-simple.config.ts --reporter=list

  deploy-production:
    needs: build-and-preview
    if: ${{ github.event.inputs.deploy == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Firebase Tools
        run: npm install -g firebase-tools

      - name: Auth via Service Account (optional)
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          if [ -n "$FIREBASE_SERVICE_ACCOUNT" ]; then
            echo "$FIREBASE_SERVICE_ACCOUNT" > ${HOME}/gcp.json
            echo "GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcp.json" >> $GITHUB_ENV
            echo "Service account credentials configured."
          else
            echo "No service account provided; will use FIREBASE_TOKEN if present."
          fi

      - name: Install deps and build
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: Deploy to Firebase (token if present)
        working-directory: frontend
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          if [ -n "$FIREBASE_TOKEN" ]; then \
            firebase deploy --project ${FIREBASE_PROJECT_ID} --only hosting:main-site,hosting:admin --token "$FIREBASE_TOKEN"; \
          else \
            firebase deploy --project ${FIREBASE_PROJECT_ID} --only hosting:main-site,hosting:admin; \
          fi
